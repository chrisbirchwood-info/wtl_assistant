import { createClient } from '@supabase/supabase-js'
import dotenv from 'dotenv'

dotenv.config({ path: '.env.local' })

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY

console.log('üß™ Testing Profile Creation\n')

const supabase = createClient(supabaseUrl, supabaseAnonKey)

async function testProfileCreation() {
  try {
    // 1. Utw√≥rz u≈ºytkownika testowego
    console.log('üîÑ Creating test user...')
    
    const testUserData = {
      email: `test-profile-${Date.now()}@example.com`,
      username: 'Test Profile User',
      role: 'student'
    }
    
    const { data: newUser, error: userError } = await supabase
      .from('users')
      .insert([testUserData])
      .select()
      .single()
    
    if (userError) {
      console.log('‚ùå User creation failed:', userError.message)
      return
    }
    
    console.log('‚úÖ User created successfully:', newUser.id)
    
    // 2. Utw√≥rz profil studenta
    console.log('üîÑ Creating student profile...')
    
    const { data: profileData, error: profileError } = await supabase
      .from('student_profiles')
      .insert([{ user_id: newUser.id }])
    
    if (profileError) {
      console.log('‚ùå Profile creation failed:', profileError.message)
    } else {
      console.log('‚úÖ Profile created successfully')
    }
    
    // 3. Sprawd≈∫ czy profil zosta≈Ç utworzony
    console.log('üîç Checking if profile exists...')
    
    const { data: profile, error: checkError } = await supabase
      .from('student_profiles')
      .select('*')
      .eq('user_id', newUser.id)
    
    if (checkError) {
      console.log('‚ùå Profile check failed:', checkError.message)
    } else if (profile && profile.length > 0) {
      console.log('‚úÖ Profile found:', profile[0])
    } else {
      console.log('‚ö†Ô∏è Profile not found')
    }
    
    // 4. Usu≈Ñ u≈ºytkownika testowego (profil zostanie usuniƒôty automatycznie przez CASCADE)
    console.log('üßπ Cleaning up...')
    
    await supabase
      .from('users')
      .delete()
      .eq('id', newUser.id)
    
    console.log('‚úÖ Cleanup completed')
    
  } catch (error) {
    console.error('‚ùå Test failed:', error.message)
  }
}

testProfileCreation()
